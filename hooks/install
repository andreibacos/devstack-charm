#!/usr/bin/python

# Copyright 2015 Cloudbase Solutions SRL
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import setup
setup.pre_install()

import devstack

from charmhelpers.core import hookenv

import re


def parse_interfaces_file(interfaces_file):
    with open(interfaces_file) as f:
        vals = ("auto", "source")
        tmp = []
        for line in f:
            if line.startswith(vals):
                yield tmp
                tmp = [line]
            else:
                tmp.append(line)
    if tmp:
        yield tmp


def install():
    hookenv.log('Installing devstack')
    config = hookenv.config()
    use_bonding = config.get("use-bonding", False)
    if use_bonding:
        b = devstack.Bonding()
        b.run()
    # add steps for installing dependencies and packages here
    # e.g.: from charmhelpers import fetch
    #       fetch.apt_install(fetch.filter_installed_packages(['nginx']))
    devstack.install_extra_packages()
    devstack.sync_time()

    # remove juju 2.x created bridge, and set the ip on the interface
    # caution: ugly hacks ahead
    data_ports = config.get("data-port", "eth1")
    data_port = devstack.get_port(data_ports)
    if data_port.startswith("br-"):
        ret = []
        for iface in list(parse_interfaces_file("/etc/network/interfaces")):
            if iface and data_port not in iface[0]:
                ret.append(iface)
            else:
                for val in iface:
                    if val.strip().startswith("address"):
                        ip = val.strip().split()[1]
                    if val.strip().startswith("gateway"):
                        gw = val.strip().split()[1]

        for r in ret:
            if r and br.replace("br-", "") in r[0]:
                del(r[-1])
                r[1] = r[1].replace("manual", "static")
                r.append("    address %s\n" % ip)
                r.append("    gateway %s\n" % gw)
                r.append("\n")

        new_interfaces = ''.join([item for sublist in ret for item in sublist])
        f = open("/etc/network/interfaces", "w")
        f.write(new_interfaces)
        f.close()

        devstack.run_command(["brctl", "delif", data_port, data_port.replace("br-", "")], username="root")
        # This will fail if you have more interfaces in the bridge 
        # (should not happen unless you build an lxd on this host before deploying this charm)
        devstack.run_command(["ifconfig", data_port, "down"], username="root")
        devstack.run_command(["brctl", "delbr", data_port], username="root")
        devstack.run_command(["dhclient", "-v", data_port.replace("br-", "")], username="root")
    d = devstack.Devstack(username=devstack.DEFAULT_USER)
    d.run()


if __name__ == "__main__":
    install()
